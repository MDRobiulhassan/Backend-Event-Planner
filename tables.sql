-- create database eventplanner;
-- USE eventplanner;

-- -- User table
-- CREATE TABLE User (
--     user_id INT PRIMARY KEY AUTO_INCREMENT,
--     name VARCHAR(255) NOT NULL,
--     email VARCHAR(255) NOT NULL,
--     password VARCHAR(255) NOT NULL,
--     is_admin BOOLEAN DEFAULT FALSE
-- );

-- -- UserDetails table
-- CREATE TABLE UserDetails (
--     user_id INT PRIMARY KEY,
--     name VARCHAR(255) NOT NULL,
--     email VARCHAR(255),
--     phone VARCHAR(20),
--     date_of_birth DATE,
--     image LONGBLOB,
--     address VARCHAR(255),
--     FOREIGN KEY (user_id) REFERENCES User(user_id)
-- );

-- -- Event table
-- CREATE TABLE Event (
--     event_id INT PRIMARY KEY AUTO_INCREMENT,
--     title VARCHAR(255) NOT NULL,
--     description TEXT,
--     date DATE,
--     time TIME,
--     venue VARCHAR(255),
--     user_id INT NOT NULL,
--     FOREIGN KEY (user_id) REFERENCES User(user_id)
-- );

-- -- Review table
-- CREATE TABLE Review (
--     review_id INT PRIMARY KEY AUTO_INCREMENT,
--     user_id INT NOT NULL,
--     event_id INT NOT NULL,
--     rating INT,
--     comment TEXT,
--     FOREIGN KEY (user_id) REFERENCES User(user_id),
--     FOREIGN KEY (event_id) REFERENCES Event(event_id)
-- );

-- -- Attendee table
-- CREATE TABLE Attendee (
--     attendee_id INT PRIMARY KEY AUTO_INCREMENT,
--     name VARCHAR(255) NOT NULL,
--     email VARCHAR(255),
--     phone VARCHAR(20),
--     date_of_birth DATE,
--     image LONGBLOB,
--     address VARCHAR(255)
-- );

-- -- Admin table
-- CREATE TABLE Admin (
--     admin_id INT PRIMARY KEY AUTO_INCREMENT,
--     user_id INT NOT NULL,
--     name VARCHAR(255) NOT NULL,
--     email VARCHAR(255) NOT NULL,
--     password VARCHAR(255) NOT NULL,
--     FOREIGN KEY (user_id) REFERENCES User(user_id)
-- );